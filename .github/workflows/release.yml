name: Release

on:
  push:
    tags:
      - "v*"

jobs:

  prepare:
    name: "Prepare for release"
    runs-on: ubuntu-latest
    timeout-minutes: 1

    outputs:
      version: ${{ steps.versions.outputs.version }}
      py_version: ${{ steps.versions.outputs.py_version }}

    steps:
    - uses: actions/checkout@v2

    - name: Get versions
      id: versions
      run: |
        version="$(./get_version.sh __version__)"
        py_version="$(./get_version.sh __py_version__)"
        # check the tag ref is the same as package version:
        if [ "v${version}" != "$tag_ref" ]; then
          echo "::error ::fatal! version not matching with tag"
          exit 1
        fi
        echo "::set-output name=version::$version"
        echo "::set-output name=py_version::$py_version"
      env:
        tag_ref: ${{ github.ref_name }}

  release_github:
    name: "Create release on Github"
    needs: [ prepare ]
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v2

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            # v${{ needs.prepare.outputs.version }}

            ## PyPI

            ```bash
            pip install git-substatus==${{ needs.prepare.outputs.version }}
            ```

            ## DockerHub

            ```bash
            docker run --rm -t -v "$(pwd)":/"$(pwd)" -w "$(pwd)" strboul/git-substatus:${{ needs.prepare.outputs.version }}
            ```
            # TODO which files actually?
          files: dist/

  publish_pypi:
    name: "Publish to PyPI (https://pypi.org/project/git-substatus/)"
    needs: [ prepare ]
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ needs.prepare.outputs.py_version }}

    - name: Install dev dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt

    - name: Build a binary wheel and a source tarball
      run: |
        python -m pip install build --user
        python -m build --sdist --wheel --outdir dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  publish_dockerhub:
    name: "Publish to DockerHub (https://hub.docker.com/r/strboul/git-substatus)"
    needs: [ prepare ]
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: strboul
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args:
            PY_VERSION=${{ needs.prepare.outputs.py_version }}
          tags: |
            strboul/git-substatus:${{ needs.prepare.outputs.version }}
            strboul/git-substatus:latest
